/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { MuckRakerContract } from "./MuckRakerContract";

export class MuckRakerContractFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(): Promise<MuckRakerContract> {
    return super.deploy() as Promise<MuckRakerContract>;
  }
  getDeployTransaction(): UnsignedTransaction {
    return super.getDeployTransaction();
  }
  attach(address: string): MuckRakerContract {
    return super.attach(address) as MuckRakerContract;
  }
  connect(signer: Signer): MuckRakerContractFactory {
    return super.connect(signer) as MuckRakerContractFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MuckRakerContract {
    return new Contract(address, _abi, signerOrProvider) as MuckRakerContract;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address"
      },
      {
        internalType: "string",
        name: "productCID",
        type: "string"
      }
    ],
    name: "create_product",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "productCID",
        type: "string"
      }
    ],
    name: "get_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function",
    constant: true
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address"
      }
    ],
    name: "get_projects",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]"
      }
    ],
    stateMutability: "view",
    type: "function",
    constant: true
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610548806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634ff896dc146100465780635857ee0d1461006f5780636b8b587d1461008f575b600080fd5b6100596100543660046103f4565b6100af565b604051610066919061044b565b60405180910390f35b61008261007d36600461036d565b6100e1565b604051610066919061045f565b6100a261009d36600461039b565b6101cd565b60405161006691906104d7565b60006001826040516100c1919061042f565b908152604051908190036020019020546001600160a01b03169050919050565b6001600160a01b038116600090815260208181526040808320805482518185028101850190935280835260609492939192909184015b828210156101c25760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156101ae5780601f10610183576101008083540402835291602001916101ae565b820191906000526020600020905b81548152906001019060200180831161019157829003601f168201915b505050505081526020019060010190610117565b505050509050919050565b6001600160a01b0382166000908152602081815260408220805460018101825581845282842085519293610208939190920191860190610254565b508360018460405161021a919061042f565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055506001905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061029557805160ff19168380011785556102c2565b828001600101855582156102c2579182015b828111156102c25782518255916020019190600101906102a7565b506102ce9291506102d2565b5090565b6102ec91905b808211156102ce57600081556001016102d8565b90565b600082601f8301126102ff578081fd5b813567ffffffffffffffff80821115610316578283fd5b604051601f8301601f191681016020018281118282101715610336578485fd5b60405282815292508284830160200186101561035157600080fd5b8260208601602083013760006020848301015250505092915050565b60006020828403121561037e578081fd5b81356001600160a01b0381168114610394578182fd5b9392505050565b600080604083850312156103ad578081fd5b82356001600160a01b03811681146103c3578182fd5b9150602083013567ffffffffffffffff8111156103de578182fd5b6103ea858286016102ef565b9150509250929050565b600060208284031215610405578081fd5b813567ffffffffffffffff81111561041b578182fd5b610427848285016102ef565b949350505050565b600082516104418184602087016104e2565b9190910192915050565b6001600160a01b0391909116815260200190565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156104ca57878503603f19018452815180518087526104ab818989018a85016104e2565b601f01601f191695909501860194509285019290850190600101610484565b5092979650505050505050565b901515815260200190565b60005b838110156104fd5781810151838201526020016104e5565b8381111561050c576000848401525b5050505056fea2646970667358221220626760a611f5c71721d2695caca6fab3e32c6e5c4042c1c672dad77da3964d6764736f6c63430006010033";
